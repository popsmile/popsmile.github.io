---
layout: post
title:  "TIL: 2019.01.28"
date:   2019-01-28 23:59:59
author: Jamie
categories: TIL
tags: MVVM UIStackView
cover:  "/assets/cover/pencil-clips-on-greenblue.jpeg"
---

## MVVM

Model - View - ViewModel 디자인 패턴에 대해서 공부 중이다. 하지만, 아직 엄청 확 와닿지 않은 건 사실이다... 여러 영상과 포스트를 읽어보았다.

<img src="https://popsmile.github.io/res/images/TIL/MVVM2.png">

[이미지 출처](https://medium.com/ios-os-x-development/ios-architecture-patterns-ecba4c38de52)

<img src="https://popsmile.github.io/res/images/TIL/MVVM.png">

[이미지 출처](https://www.raywenderlich.com/34-design-patterns-by-tutorials-mvvm) / [관련 영상](https://www.youtube.com/watch?v=bFoLlwuzAtk)

위 그림보다는 뷰 컨트롤러까지 나눠진 아래 그림이 더 이해하기 쉬웠던 것 같다. 우선 크게 보았을 때 ViewModel이 Model을 소유하고, 그 ViewModel을 View가 소유하고 있다. 그리고 Model은 ViewModel에게 변경사항을 알려주고, ViewModel은 View와 바인딩되어있다.

여기서, **바인딩**이라는 개념을 완전히 이해하지못해 적용하기가 망설여지고 있다. KVO(Key-Value Observing)이나 Notifications을 사용한다고 읽었는데, KVO가 무엇인지 어떻게 사용하는지를 찾아보고 있는 중이다. 

<br>

## UIStackView

[카드게임 앱 2단계](https://github.com/popsmile/swift-cardgameapp/tree/popsmile#2-%EC%B9%B4%EB%93%9C-UI)를 마무리했다. `CardImageView` 커스텀 뷰를 만들어 `CardViewFactory` 구조체를 사용해 뷰 컨트롤러 루트 뷰 하위뷰로 추가해주었다. 다음 단계는 카드 스택 뷰를 만드는 것인데, 여기서 **UIStackView**를 활용해볼 생각이다. 이 UIStackView를 활용하려면 오토레이아웃 개념도 확실히 잡고가야한다. 오늘 내일 중으로 이 두 개념 정리를 해봐야겠다. 